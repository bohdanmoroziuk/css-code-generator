{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","helpers/Converter.js","actions/index.js","selectors/index.js","components/CheckboxGroup.js","components/RangeGroup.js","components/ColorGroup.js","pages/BoxShadowGenerator.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","Converter","h","_Converter$parseHEX2","parseHEX","alpha","arguments","_Converter$parseHEX4","r","g","b","rgb","sep","indexOf","substr","split","toString","__webpack_require__","d","__webpack_exports__","changeBoxShadowParameter","changeColorParameter","_constants_actions__WEBPACK_IMPORTED_MODULE_0__","parameter","type","ACTION_TYPES","CHANGE_BOX_SHADOW_PARAMETER","CHANGE_COLOR_PARAMETER","selectBoxShadow","selectColor","state","boxShadow","color","CheckboxGroup","_ref","label","name","checked","handleChange","react_default","a","createElement","className","id","onChange","htmlFor","RangeGroup","min","max","step","ColorGroup","BoxShadowGenerator","event","_event$target","target","_this","props","Object","defineProperty","makeBoxShadowStyle","map","item","hexToRGBA","isNaN","parseInt","join","_this$props$boxShadow","this","inset","offsetX","offsetY","blurRadius","spreadRedius","shadowColor","backgroundColor","boxColor","opacity","boxShadowStyle","components_CheckboxGroup","components_RangeGroup","components_ColorGroup","style","rows","readOnly","Component","connect","objectSpread","dispatch"],"mappings":"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","file":"static/js/2.1d16547e.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","class Converter {\n    static hexToRGB(h) {\n        const [ r, g, b ] = Converter.parseHEX(h);\n\n        return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \")\";\n    }\n\n    static hexToRGBA(h, alpha = 1) {\n        const [ r, g, b ] = Converter.parseHEX(h);\n\n        return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \",\" + alpha + \")\";\n    }\n\n    static parseHEX(h) {\n        let r = 0, g = 0, b = 0;\n\n        if (h.length === 4) {\n            r = \"0x\" + h[1] + h[1];\n            g = \"0x\" + h[2] + h[2];\n            b = \"0x\" + h[3] + h[3];\n\n        } else if (h.length === 7) {\n            r = \"0x\" + h[1] + h[2];\n            g = \"0x\" + h[3] + h[4];\n            b = \"0x\" + h[5] + h[6];\n        }\n\n        return [ r, g, b ];\n    }\n\n    static rgbToHEX(rgb) {\n        let sep = rgb.indexOf(\",\") > -1 ? \",\" : \" \";\n        \n        rgb = rgb.substr(4).split(\")\")[0].split(sep);\n\n        let r = (+rgb[0]).toString(16),\n            g = (+rgb[1]).toString(16),\n            b = (+rgb[2]).toString(16);\n\n        if (r.length === 1)\n            r = \"0\" + r;\n        if (g.length === 1)\n            g = \"0\" + g;\n        if (b.length === 1)\n            b = \"0\" + b;\n\n        return \"#\" + r + g + b;\n    }\n}\n\nexport default Converter;","import ACTION_TYPES from '../constants/actions';\n\nexport const changeBoxShadowParameter = (parameter) => ({\n    type: ACTION_TYPES.CHANGE_BOX_SHADOW_PARAMETER,\n    parameter\n});\n\nexport const changeColorParameter = (parameter) => ({\n    type: ACTION_TYPES.CHANGE_COLOR_PARAMETER,\n    parameter\n});","export const selectBoxShadow = state =>\n    state.boxShadow;\n\nexport const selectColor = state =>\n    state.color;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CheckboxGroup = ({ label, name, checked, handleChange }) => (\n    <div className=\"form-group form-check\">\n        <input \n            type=\"checkbox\" \n            className=\"form-check-input\" \n            name={name} \n            id={name} \n            checked={checked} \n            onChange={handleChange} \n        />\n        <label className=\"form-check-label\" htmlFor={name}>{label}</label>\n    </div>\n);\n\nCheckboxGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    checked: PropTypes.bool.isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default CheckboxGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RangeGroup = ({ label, name, min, max, step, value, handleChange }) => (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input \n            type=\"range\" \n            className=\"form-control-range\" \n            name={name} \n            id={name} \n            min={min}  \n            max={max} \n            step={step}\n            value={value}\n            onChange={handleChange}\n        />\n    </div>\n);\n\nRangeGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    min: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired,\n    max: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired,\n    step: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default RangeGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorGroup = ({ label, name, value, handleChange }) => (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input \n            type=\"color\" \n            className=\"form-control\" \n            name={name} \n            id={name} \n            value={value} \n            onChange={handleChange} \n        />\n    </div>\n);\n\nColorGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}\n\nexport default ColorGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { selectBoxShadow } from '../selectors';\nimport { changeBoxShadowParameter } from '../actions';\nimport Converter from '../helpers/Converter';\nimport CheckboxGroup from '../components/CheckboxGroup';\nimport RangeGroup from '../components/RangeGroup';\nimport ColorGroup from '../components/ColorGroup';\n\nclass BoxShadowGenerator extends Component {\n    static propTypes = {\n        boxShadow: PropTypes.object.isRequired\n    };\n\n    handleChange = event => {\n        const { name, value, checked, type } = event.target;\n\n        this.props.changeBoxShadowParameter({\n            [name]: type === 'checkbox' ? checked : value\n        });\n    };\n\n    makeBoxShadowStyle = () => {\n        const order = [ 'inset', 'offsetX', 'offsetY', 'blurRadius', 'spreadRedius', 'shadowColor' ];\n        const { boxShadow } = this.props;\n\n        return order\n            .map(item => {\n                if (item === 'inset') {\n                    return boxShadow[item] === true ? 'inset' : '';\n                }\n                if (item === 'shadowColor') {\n                    return Converter.hexToRGBA(boxShadow[item], boxShadow['opacity']);\n                }\n                if ( ! isNaN(parseInt(boxShadow[item], 10))) {\n                    return boxShadow[item] + 'px';\n                }\n                return boxShadow[item];\n            })\n            .join(' ');\n    };\n\n    render() {\n        const {\n            inset,\n            offsetX,\n            offsetY,\n            blurRadius,\n            spreadRedius,\n            shadowColor,\n            backgroundColor,\n            boxColor,\n            opacity,\n        } = this.props.boxShadow;\n\n        const boxShadowStyle = this.makeBoxShadowStyle();\n\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    Box Shadow\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-md-5 col-sm-6\">\n                            <form>\n                                <div className=\"group\">\n                                    <CheckboxGroup label=\"Inset\" name=\"inset\" checked={inset} handleChange={this.handleChange} />\n                                </div>\n                                <div className=\"group\">\n                                    <RangeGroup label=\"Horizontal Length\" name=\"offsetX\" min=\"-100\" step=\"1\" max=\"100\" value={offsetX} handleChange={this.handleChange} />\n                                    <RangeGroup label=\"Vertical Length\" name=\"offsetY\" min=\"-100\" step=\"1\" max=\"100\" value={offsetY} handleChange={this.handleChange} />\n                                </div>\n                                <div className=\"group\">\n                                    <RangeGroup label=\"Blur Radius\" name=\"blurRadius\" min=\"0\" step=\"1\" max=\"100\" value={blurRadius} handleChange={this.handleChange} />\n                                    <RangeGroup label=\"Spread Radius\" name=\"spreadRedius\" min=\"-100\" step=\"1\" max=\"100\" value={spreadRedius} handleChange={this.handleChange} />\n                                </div>\n                                <div className=\"group\">\n                                    <ColorGroup label=\"Shadow Color\" name=\"shadowColor\" value={shadowColor} handleChange={this.handleChange} />\n                                </div>\n                                <div className=\"group\">\n                                    <ColorGroup label=\"Background Color\" name=\"backgroundColor\" value={backgroundColor} handleChange={this.handleChange} />\n                                </div>\n                                <div className=\"group\">\n                                    <ColorGroup label=\"Box Color\" name=\"boxColor\" value={boxColor} handleChange={this.handleChange} />\n                                </div>\n                                <div className=\"group\">\n                                    <RangeGroup label=\"Opacity\" name=\"opacity\" min=\"0\" step=\"0.01\" max=\"1\" value={opacity} handleChange={this.handleChange} />\n                                </div>\n                            </form>\n                        </div>\n                        <div \n                            className=\"col-md-7 col-sm-6 d-flex align-items-center\"\n                            style={{\n                                backgroundColor: backgroundColor\n                            }}   \n                        >\n                            <div \n                                className=\"card box\" \n                                style={{\n                                    backgroundColor: boxColor,\n                                    boxShadow: boxShadowStyle\n                                }}\n                            >\n                                <form className=\"box__form\">\n                                    <div className=\"form-group\">\n                                        <textarea \n                                            className=\"form-control box__textarea\" \n                                            rows=\"3\"\n                                            value={boxShadowStyle}\n                                            readOnly\n                                        ></textarea>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    boxShadow: {\n        ...selectBoxShadow(state)\n    }\n});\n\nconst mapDispatchToProps = dispatch => ({\n    changeBoxShadowParameter: (parameter) => {\n        dispatch(changeBoxShadowParameter(parameter))\n    }\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BoxShadowGenerator);"],"sourceRoot":""}