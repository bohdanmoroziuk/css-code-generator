{"version":3,"sources":["reducers/boxShadow.js","reducers/color.js","reducers/root.js","components/Brand.js","components/Nav.js","components/Navbar.js","routes/index.js","service/RouterOutlet.js","components/App.js","service/ErrorBoundary.js","serviceWorker.js","index.js","constants/actions.js"],"names":["initialState","inset","offsetX","offsetY","blurRadius","spreadRedius","shadowColor","backgroundColor","boxColor","opacity","boxShadowReducer","state","arguments","length","undefined","action","type","ACTION_TYPES","CHANGE_BOX_SHADOW_PARAMETER","Object","objectSpread","parameter","value","scale","colorReducer","CHANGE_COLOR_PARAMETER","rootReducer","combineReducers","boxShadow","color","Brand","_ref","text","react_default","a","createElement","Link","className","to","Nav","NavLink","activeClassName","exact","Navbar","components_Brand","components_Nav","ColorConverter","lazy","__webpack_require__","e","then","bind","BoxShadowGenerator","NotFound","routes","path","render","props","RouterOutlet","react","fallback","Switch","map","route","index","Route","assign","key","App","components_Navbar","service_RouterOutlet","ErrorBoundary","error","info","this","setState","_this$state","style","whiteSpace","toString","componentStack","children","Component","Boolean","window","location","hostname","match","store","createStore","es","BrowserRouter","service_ErrorBoundary","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_exports__"],"mappings":"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","file":"static/js/main.b9d04970.chunk.js","sourcesContent":["import ACTION_TYPES from '../constants/actions';\n\nconst initialState = {\n    inset: false,\n    offsetX: '10',\n    offsetY: '10',\n    blurRadius: '5',\n    spreadRedius: '0',\n    shadowColor: '#000000',\n    backgroundColor: '#ffffff',\n    boxColor: '#e7a61a',\n    opacity: '1' \n};\n\nconst boxShadowReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_TYPES.CHANGE_BOX_SHADOW_PARAMETER:\n            return {\n                ...state,\n                ...action.parameter\n            };\n        default:\n            return {\n                ...state\n            };\n    }\n};\n\nexport default boxShadowReducer;","import ACTION_TYPES from '../constants/actions';\n\nconst initialState = {\n    value: '#000',\n    scale: 'hex'\n};\n\nconst colorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_TYPES.CHANGE_COLOR_PARAMETER:\n            return {\n                ...state,\n                ...action.parameter\n            };\n        default:\n            return {\n                ...state\n            };\n    }\n}; \n\nexport default colorReducer;","import { combineReducers } from 'redux';\nimport boxShadowReducer from './boxShadow';\nimport colorReducer from './color'\n\nconst rootReducer = combineReducers({\n    boxShadow: boxShadowReducer,\n    color: colorReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Brand = ({ text }) => (\n    <Link className=\"navbar-brand\" to=\"/\">{text}</Link>\n);\n\nBrand.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Brand;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => (\n    <ul className=\"nav nav-pills justify-content-end\">\n        <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/\" exact>Color Converter</NavLink>\n        </li>\n        <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/box-shadow\" exact>Box Shadow</NavLink>\n        </li>\n    </ul>\n);\n\nexport default Nav;","import React from 'react';\n\nimport Brand from './Brand';\nimport Nav from './Nav';\n\nconst Navbar = () => (\n    <nav className=\"navbar navbar-dark bg-dark\">\n        <Brand text=\"CSS Code Generator\" />\n        <Nav />\n    </nav>\n);\n\nexport default Navbar;","import React, { lazy } from 'react';\n\nconst ColorConverter = lazy(() => import('../pages/ColorConverter'));\nconst BoxShadowGenerator = lazy(() => import('../pages/BoxShadowGenerator'));\nconst NotFound = lazy(() => import('../pages/NotFound'));\n\nconst routes = [\n    {\n        path: '/',\n        exact: true,\n        render: props => <ColorConverter {...props} />\n    }, {\n        path: '/box-shadow',\n        render: props => <BoxShadowGenerator {...props} />\n    }, {\n        path: '*',\n        render: props => <NotFound {...props} />\n    }\n];\n\nexport default routes;","import React, { Suspense } from 'react';\nimport {\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport routes from '../routes';\n\nconst RouterOutlet = () => (\n    <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n            {routes && routes.map((route, index) => (\n                <Route\n                    key={index}\n                    {...route}\n                />\n            ))}\n        </Switch>\n    </Suspense>\n);\n\nexport default RouterOutlet;","import React from 'react';\n\nimport Navbar from './Navbar';\nimport RouterOutlet from '../service/RouterOutlet';\n\nconst App = () => (\n    <div className=\"app\">\n        <Navbar />\n\n        <div className=\"container mt-5\">\n            <RouterOutlet />\n        </div>\n    </div>\n);\n\nexport default App;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false,\n        info: null\n    };\n\n    componentDidCatch(error, info) {\n        this.setState({\n            error,\n            info\n        });\n    }\n\n    render() {\n        const { error, info } = this.state;\n\n        if (error) {\n            return (\n                <div>\n                    <h2>Something went wrong...</h2>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>\n                        {error.toString()}\n                        <br />\n                        {info.componentStack}\n                    </details>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/root';\nimport App from './components/App';\nimport ErrorBoundary from './service/ErrorBoundary';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nconst store = createStore(rootReducer);\n\nconst Index = () => (\n    <Provider store={store}>\n        <Router>\n            <ErrorBoundary>\n                <App />\n            </ErrorBoundary>\n        </Router>\n    </Provider>\n);\n\nrender(\n    <Index />, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","export default {\n    CHANGE_BOX_SHADOW_PARAMETER: 'CHANGE_BOX_SHADOW_PARAMETER',\n    CHANGE_COLOR_PARAMETER: 'CHANGE_COLOR_PARAMETER'\n};"],"sourceRoot":""}